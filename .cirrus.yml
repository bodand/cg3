linux_template: &LINUX_TEMPLATE_TASK
  apt_script:
    - apt-get update
    - apt-get install -y ninja-build zip unzip git aria2 python3 rpm signify-openbsd jq

  cmake_install_script:
    - aria2c ${CMAKE_TAR_URL} -o cmake-install.tar.gz
    - tar xzf cmake-install.tar.gz

  submodules_script:
    - git submodule update --init --recursive

  vcpkg_cache:
    folder: vcpkg/packages
    fingerprint_script:
      - jq .dependencies vcpkg.json

  configure_script:
    - cmake --preset lnx-gcc-${CG_ARCH}-rel -S.

  elevate_version_into_env_script:
    - echo CG_VER=`cat ${BUILD_PATH}/versioninfo.txt` > ${CIRRUS_ENV}

  build_script:
    - cmake --build --preset rel-full-rebuild-lnx-gcc

  src_package_script:
    - cd ${BUILD_PATH} && cpack -G TXZ .

  package_deb_script:
    - cd ${BUILD_PATH} && cpack -G DEB .

  package_rpm_script:
    - cd ${BUILD_PATH} && cpack -G RPM .

  generate_signing_keys_script:
    - signify-openbsd -G -nc "cg3 ${CG_VER} package distribution" -s cg3-${CG_VER}.sec -p cg3-${CG_VER}.pub

  signing_key_artifacts:
    path: cg3-${CG_VER}.pub

  sign_source_package_script:
    - cd ${BUILD_PATH} && shasum --tag -a 256 cg3-${CG_VER}-`uname`.tar.xz > cg3-${CG_VER}-`uname`.sha256
    - cd ${BUILD_PATH} && signify-openbsd -S -ec cg3-${CG_VER}.sec -m cg3-${CG_VER}-`uname`.sha256

  source_artifacts:
    paths:
      - ${BUILD_PATH}/cg3-${CG_VER}-`uname`.tar.xz
      - ${BUILD_PATH}/cg3-${CG_VER}-`uname`.sha256.sig

  sign_binary_packages_script:
    - cd ${BUILD_PATH} && shasum --tag -a 256 cg3-${CG_VER}-`uname`.deb >> cg3-${CG_VER}-`uname`-`uname -m`.sha256
    - cd ${BUILD_PATH} && shasum --tag -a 256 cg3-${CG_VER}-`uname`.rpm >> cg3-${CG_VER}-`uname`-`uname -m`.sha256
    - cd ${BUILD_PATH} && signify-openbsd -S -ec cg3-${CG_VER}.sec -m cg3-${CG_VER}-`uname`-`uname -m`.sha256

  binary_artifacts:
    paths:
      - ${BUILD_PATH}/cg3-${CG_VER}-`uname`-`uname -m`.deb
      - ${BUILD_PATH}/cg3-${CG_VER}-`uname`-`uname -m`.rpm
      - ${BUILD_PATH}/cg3-${CG_VER}-`uname`-`uname -m`.sha256.sig

linux_task:
  container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    CG_ARCH: x64
    BUILD_PATH: _build-release-x64-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-x86_64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-x86_64/bin:${PATH}

  << : *LINUX_TEMPLATE_TASK

linux_arm_task:
  arm_container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    VCPKG_FORCE_SYSTEM_BINARIES: 1
    CG_ARCH: arm
    BUILD_PATH: _build-release-arm-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-aarch64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-aarch64/bin:${PATH}

  << : *LINUX_TEMPLATE_TASK
