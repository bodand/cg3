build_template: &BUILD_TEMPLATE_TASK
  submodules_script:
    - git submodule update --init --recursive

  env:
    VCPKG_DEFAULT_BINARY_CACHE: ${CIRRUS_WORKING_DIR}/vcpkg-bincache

  vcpkg_cache:
    folder: vcpkg-bincache
    reupload_on_changes: false
    fingerprint_script:
      - echo $CG_ARCH
      - echo $CIRRUS_OS
      - jq .dependencies vcpkg.json
    populate_script:
      - mkdir ${VCPKG_DEFAULT_BINARY_CACHE}
      - cmake --preset ${CG_CMAKE_PRESET} -S.

  configure_script:
    - cmake --preset ${CG_CMAKE_PRESET} -S.

  upload_caches:
    - vcpkg

  elevate_version_into_env_script:
    - echo CG_VER=`cat ${BUILD_PATH}/versioninfo.txt` > ${CIRRUS_ENV}

  build_script:
    - cmake --build --preset ${CG_CMAKE_BUILD_PRESET}

linux_test_template: &LINUX_TEST_TEMPLATE_TASK
  env:
    - CG_CMAKE_PRESET: lnx-gcc-${CG_ARCH}-rel
    - CG_CMAKE_BUILD_PRESET: release-linux-${CG_ARCH}

  apt_script:
    - apt-get update
    - apt-get install -y ninja-build zip unzip git aria2 python3 rpm signify-openbsd jq asciidoctor

  cmake_install_script:
    - aria2c ${CMAKE_TAR_URL} -o cmake-install.tar.gz
    - tar xzf cmake-install.tar.gz

  <<: *BUILD_TEMPLATE_TASK

  test_script:
    - cd ${BUILD_PATH}
    - ctest

linux_deploy_template: &LINUX_DEPLOY_TEMPLATE_TASK
  env:
    - CG_CMAKE_PRESET: lnx-gcc-${CG_ARCH}-rel
    - CG_CMAKE_BUILD_PRESET: release-linux-${CG_ARCH}

  apt_script:
    - apt-get update
    - apt-get install -y curl ninja-build zip unzip git aria2 python3 rpm signify-openbsd jq asciidoctor

  cmake_install_script:
    - aria2c ${CMAKE_TAR_URL} -o cmake-install.tar.gz
    - tar xzf cmake-install.tar.gz

  <<: *BUILD_TEMPLATE_TASK

  tarball_package_script:
    - cd ${BUILD_PATH} && cpack -G TXZ .

  package_deb_script:
    - cd ${BUILD_PATH} && cpack -G DEB .

  package_rpm_script:
    - cd ${BUILD_PATH} && cpack -G RPM .

  elevate_package_name_into_env_script:
    - echo "CG_PKG_NAME=cg3-checker-${CG_VER}-`uname`-`uname -m`" > ${CIRRUS_ENV}

  generate_signing_keys_script:
    - cd ${BUILD_PATH} && signify-openbsd -G -nc "cg3 ${CG_VER} package distribution" -s "${CG_PKG_NAME}.sec" -p "${CG_PKG_NAME}.pub"

  sign_packages_script:
    - cd ${BUILD_PATH}
    - shasum --tag -a 256 "${CG_PKG_NAME}.tar.xz" > "${CG_PKG_NAME}.sha256"
    - shasum --tag -a 256 "${CG_PKG_NAME}.deb" >> "${CG_PKG_NAME}.sha256"
    - shasum --tag -a 256 "${CG_PKG_NAME}.rpm" >> "${CG_PKG_NAME}.sha256"
    - signify-openbsd -S -es "${CG_PKG_NAME}.sec" -m "${CG_PKG_NAME}.sha256"

  gh_create_release_script:
    - >
      jq --null-input \
        --arg tag_name "${CIRRUS_TAG}" \
        --arg name "cg3 release ${CIRRUS_TAG}" \
        --arg body "$(cat ${CIRRUS_WORKING_DIR}/changelog/ChangeLog-${CIRRUS_TAG}.md)" \
        '{"tag_name": $tag_name, "name": $name, "body": $body, "generate_release_notes": true}' \
        > release-payload.json
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        "https://api.github.com/repos/bodand/cg3/releases" \
        -d "@release-payload.json"
    - >
      curl \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        "https://api.github.com/repos/bodand/cg3/releases/tags/${CIRRUS_TAG}" \
        | tee response.json
    - echo "GH_REL_ID=$(jq .id response.json)" > ${CIRRUS_ENV}

  gh_release_upload_script:
    - cd ${BUILD_PATH}
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/octet-stream" \
        "https://uploads.github.com/repos/bodand/cg3/releases/${GH_REL_ID}/assets?name=${CG_PKG_NAME}.pub" \
        --data-binary "@${CG_PKG_ANEM}.pub"
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/x-gtar" \
        "https://uploads.github.com/repos/bodand/cg3/releases/${GH_REL_ID}/assets?name=${CG_PKG_NAME}.tar.xz" \
        --data-binary "@${CG_PKG_NAME}.tar.xz"
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/vnd.debian.binary-package" \
        "https://uploads.github.com/repos/bodand/cg3/releases/${GH_REL_ID}/assets?name=${CG_PKG_NAME}.deb" \
        --data-binary "@${CG_PKG_NAME}.deb"
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: application/x-rpm" \
        "https://uploads.github.com/repos/bodand/cg3/releases/${GH_REL_ID}/assets?name=${CG_PKG_NAME}.rpm" \
        --data-binary "@${CG_PKG_NAME}.rpm"
    - >
      curl -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        -H "Content-Type: text/plain" \
        "https://uploads.github.com/repos/bodand/cg3/releases/${GH_REL_ID}/assets?name=${CG_PKG_NAME}.sha256.sig" \
        --data-binary "@${CG_PKG_NAME}.sha256.sig"

  binary_artifacts:
    paths:
      - ${BUILD_PATH}/${CG_PKG_NAME}.pub
      - ${BUILD_PATH}/${CG_PKG_NAME}.tar.xz
      - ${BUILD_PATH}/${CG_PKG_NAME}.deb
      - ${BUILD_PATH}/${CG_PKG_NAME}.rpm
      - ${BUILD_PATH}/${CG_PKG_NAME}.sha256.sig

linux_deployment_task:
  only_if: $CIRRUS_BRANCH == 'trunk' && $CIRRUS_TAG != ''
  depends_on:
    - linux_test
  container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    CG_ARCH: x64
    BUILD_PATH: _build-release-x64-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-x86_64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-x86_64/bin:${PATH}

  <<: *LINUX_DEPLOY_TEMPLATE_TASK

linux_arm_deployment_task:
  only_if: $CIRRUS_BRANCH == 'trunk' && $CIRRUS_TAG != ''
  depends_on:
    - linux_arm_test
  arm_container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    VCPKG_MAX_CONCURRENCY: 6
    VCPKG_FORCE_SYSTEM_BINARIES: 1
    CG_ARCH: arm
    BUILD_PATH: _build-release-arm-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-aarch64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-aarch64/bin:${PATH}

  <<: *LINUX_DEPLOY_TEMPLATE_TASK

linux_test_task:
  container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    CG_ARCH: x64
    BUILD_PATH: _build-release-x64-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-x86_64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-x86_64/bin:${PATH}

  <<: *LINUX_TEST_TEMPLATE_TASK

linux_arm_test_task:
  arm_container:
    image: gcc:latest
    cpu: 8
    memory: 32G

  env:
    VCPKG_MAX_CONCURRENCY: 6
    VCPKG_FORCE_SYSTEM_BINARIES: 1
    CG_ARCH: arm
    BUILD_PATH: _build-release-arm-gcc
    CMAKE_TAR_URL: https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-linux-aarch64.tar.gz
    PATH: /tmp/cirrus-ci-build/cmake-3.25.1-linux-aarch64/bin:${PATH}

  <<: *LINUX_TEST_TEMPLATE_TASK
